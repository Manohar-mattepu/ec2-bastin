terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.0"
    }
  }
}

resource "aws_vpc" "DEMO-VPC" {
  cidr_block           = "10.0.0.0/16"
  enable_dns_hostnames = "true"
  enable_dns_support   = "true"
  tags = {
    Name = "DEMO-VPC1"
  }
}
resource "aws_subnet" "DEMO-SUBNET" {
  vpc_id                  = aws_vpc.DEMO-VPC.id
  availability_zone       = "us-east-1a"
  cidr_block              = "10.0.0.0/17"
  map_public_ip_on_launch = "true" //it makes this a public subnet
  tags = {
    Name = "DEMO-SUBNET-1"
  }
}

resource "aws_internet_gateway" "DEMO-IGW" {
  vpc_id = aws_vpc.DEMO-VPC.id
  tags = {
    Name = "DEMO-IGW-1"
  }
}
resource "aws_route_table" "DEMO-ROUTE" {
  vpc_id = aws_vpc.DEMO-VPC.id
  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.DEMO-IGW.id
  }
  tags = {
    Name = "ROUTE-1"
  }
}
resource "aws_route_table_association" "DEMO-ROUTE-1" {
  subnet_id      = aws_subnet.DEMO-SUBNET.id
  route_table_id = aws_route_table.DEMO-ROUTE.id
}
resource "aws_security_group" "DEMO-SG" {
  description = "Public internet access"
  vpc_id      = aws_vpc.DEMO-VPC.id

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  tags = {
    Name = "DEMO-SG-1"
  }
}
resource "aws_key_pair" "tf-key-pair" {
  key_name   = "tf-key-pair"
  public_key = tls_private_key.rsa.public_key_openssh
}
resource "tls_private_key" "rsa" {
  algorithm = "RSA"
  rsa_bits  = 4096
}
resource "local_file" "tf-key" {
  content  = tls_private_key.rsa.private_key_pem
  filename = "tf-key-pair"
}
resource "aws_instance" "ec2-web" {
  ami                    = "ami-09538990a0c4fe9be"
  instance_type          = "t2.micro"
  availability_zone      = "us-east-1a"
  subnet_id              = aws_subnet.DEMO-SUBNET.id
  vpc_security_group_ids = [aws_security_group.DEMO-SG.id]
  key_name               = "tf-key-pair"

  tags = {
    Name = "SERVER"
  }
}

resource "aws_subnet" "DEMO-SUBNET-2" {
  vpc_id                  = aws_vpc.DEMO-VPC.id
  availability_zone       = "us-east-1a"
  cidr_block              = "10.0.128.0/17"
  map_public_ip_on_launch = "false" //it makes this a public subnet
  tags = {
    Name = "DEMO-SUBNET-2"
  }
}
resource "aws_route_table" "DEMO-ROUTE-2" {
  vpc_id = aws_vpc.DEMO-VPC.id
route {
    cidr_block = "0.0.0.0/0"
    nat_gateway_id = aws_nat_gateway.demo-nat.id
}
tags= {
  Name= "DEMO-ROUTE-2"
}
}
resource "aws_eip" "Nat-Gateway-EIP" {
  vpc = true

  tags= {
    Name= "nat-eip"
  }
}
resource "aws_nat_gateway" "demo-nat" {
  allocation_id= aws_eip.Nat-Gateway-EIP.id
  subnet_id = aws_subnet.DEMO-SUBNET.id

 tags= {
  Name= "nat-gat"
 } 
}

resource "aws_instance" "ec2-web-1" {
  ami                    = "ami-09538990a0c4fe9be"
  instance_type          = "t2.micro"
  availability_zone      = "us-east-1a"
  subnet_id              = aws_subnet.DEMO-SUBNET-2.id
  vpc_security_group_ids = [aws_security_group.DEMO-SG.id]
  key_name               = "tf-key-pair"

  tags = {
    Name = "pri-SERVER"
  }
}

resource "aws_route_table_association" "asso" {
  subnet_id      = aws_subnet.DEMO-SUBNET-2.id
  route_table_id = aws_route_table.DEMO-ROUTE-2.id
}
